<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model 
		controller단에서 객체의 값을 반환해주기 위해 메시지 컨버터 사용
	-->
	<annotation-driven>
		<message-converters>
			<beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
		</message-converters>
	</annotation-driven>
	
	<!-- interceptor : loginAfter -->
	<beans:bean id="loginAfterInterceptor" class="com.me.rentalme.interceptor.LoginAfeterInterceptor"/>
	<beans:bean id="loginInterceptor" class="com.me.rentalme.interceptor.LoginInterceptor"/>
	<beans:bean id="loginRememberInterceptor" class="com.me.rentalme.interceptor.LoginRememberInterceptor"/>
	<interceptors>
		<interceptor>
			<mapping path="/login"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/**/"/>
			<beans:ref bean="loginRememberInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/login"/>
			<mapping path="/join/signup"/>
			<mapping path="/join/info"/>
			<mapping path="/join/compl"/>
			<beans:ref bean="loginAfterInterceptor"/>
		</interceptor>
	</interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources location="/css/" mapping="/css/**"></resources>
	<resources location="/js/" mapping="/js/**"></resources>
	<resources location="/imgs/" mapping="/imgs/**"></resources>
	<resources location="/fonts/" mapping="/fonts/**"></resources>
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- upload limmit size: 5mb -> 1024*1024*5 -->
	<beans:bean id="multipartResolver"
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="5242880" />
	</beans:bean>
	
	<context:component-scan base-package="com.me.rentalme" />
	
	<!-- aop auto proxy  -->
	<aop:aspectj-autoproxy/>
	<!-- transation -->
	<tx:annotation-driven/>
</beans:beans>
